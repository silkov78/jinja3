Приложение на Python, реализующий генератор метаданных

Приложение представляет из себя следующую структуру:
1. main.py – входной файл, запускающий исполнение приложение.
2. app/ – содержит реализацию приложения :
  2.1 __init__.py – файл, инициализирующий Python-пакет.
  2.2 app.py – создание интерфейса и запуск template_processor.py .
  2.3 gui_widgets.py – содержит графические элементы, используемые app.py.
  2.4 template_processor.py – обработка полученного шаблона и генерация метаданных.
  2.5 utils/ – вспомогательные утилиты:
      2.5.1 read_excell.py – работа с Excel-файлами.
      2.5.2 utils.py – дополнительные вспомогательные функции.

Разбор файла app.py

app.py – реализует интерфейс и запускает работу шаблонизатора.
app.py реализует интерфейс с использованием библиотеки Tkinter:
1. Создаёт главное окно с заголовком "Шаблонизатор для метаданных".
2. Добавляет поля для выбора файлов (шаблона и геодезических данных) и ввода ID-поля.
3. Валидация выбранных файлов: проверяется, является ли шаблон корректным 
   и проверяет поля, содержащиеся в файле данных.
4. Кнопка передаёт полученные файлы в template_processor.py и затем запускает его.

template_processor.py отвечает за рендеринг шаблонов Jinja и генерацию метаданных:
1. Принимает путь к шаблону, данные и ID-поле, полученные из интерфейса.
2. Загружает шаблон из файла с помощью jinja.
3. Читает геодезические данные из Excel-файла (использует библиотеку pandas).
4. Генерирует файлы .xml, рендеря шаблон для каждой строки данных.
5. Сохраняет файлы в папке ./outputs/.